*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Roboto', sans-serif;
}

/*Menu*/
/*CSS Variables*/
:root {
    --main-color: teal;
    --bar-width: 60px;
    --bar-height: 8px;
    --hamburger-gap: 6px;
    --foreground: teal;
    --background: white;
    --hamburger-margin: 8px;
    --animation-timing: 200ms ease-in-out;
    /*Get hamburger height for 3 lines and 2 gaps*/
    --hamburger-height: calc(var(--bar-height) * 3 + var(--hamburger-gap) * 2);
}

ul {
    list-style-type: none;
}

li {
    margin-bottom: 40px;
}

li:first-child {
    margin-top: 20px;
}

li a {
    box-shadow: inset 0 0 0 0 teal;
    color: white;
    
    padding: 0.8rem;
    margin: 0 -.25rem;
    transition: color .5s ease-in-out, box-shadow .5s ease-in-out;
    text-decoration: none;
    font-size: 1.1rem;
    font-weight: bold;
}

li a:hover {
    color: teal;
    box-shadow: inset 200px 0 0 0 #fff;
}

.hamburger-menu {
    /*Get X width by multiplying by square root of 2 (because we have a 90deg angle between the 2 diagonals) !!! YOU CANNOT USE sqrt(2), it breaks the X in this case, dunno why :c */
    --x-width: calc(var(--hamburger-height) * 1.41421356237);

    display: flex;
    flex-direction: column;
    gap: var(--hamburger-gap);
    width: max-content;
    position: absolute;
    top: var(--hamburger-margin);
    left: var(--hamburger-margin);
    z-index: 2;
    cursor: pointer;
}

.hamburger-menu:has(input:checked) {
    --foreground: white;
    --background: teal;
}

.hamburger-menu:has(input:focus-visible)::before,
.hamburger-menu:has(input:focus-visible)::after,
.hamburger-menu input:focus-visible {
    border: 1px solid var(--background);
    box-shadow: 0 0 0 1px var(--foreground);
}

/*Hamburger bars*/
.hamburger-menu::before,
.hamburger-menu::after,
.hamburger-menu input {
    content: "";
    width: var(--bar-width);
    height: var(--bar-height);
    background-color: var(--foreground);
    border-radius: 9999px;
    transform-origin: left center;
    transition: opacity var(--animation-timing), width var(--animation-timing),
        rotate var(--animation-timing), translate var(--animation-timing),
        background-color var(--animation-timing);
}

.hamburger-menu input {
    appearance: none;
    /*Removes the checkbox*/
    padding: 0;
    margin: 0;
    outline: none;
    pointer-events: none;
}

/*Rotation of X bars*/
.hamburger-menu:has(input:checked)::before {
    rotate: 45deg;
    width: var(--x-width);
    /*Offset to get a perfectly aligned X diagonals*/
    translate: 0 calc(var(--bar-height) / -2);
}

.hamburger-menu:has(input:checked)::after {
    rotate: -45deg;
    width: var(--x-width);
    translate: 0 calc(var(--bar-height) / 2);
}

.hamburger-menu input:checked {
    opacity: 0;
    width: 0;
}

.sidebar {
    position: relative;
    transition: translate var(--animation-timing);
    translate: -100%;
    padding: 0.5rem 1rem;
    padding-top: calc(var(--hamburger-height) + var(--hamburger-margin) + 1rem);
    background-color: var(--foreground);
    color: var(--background);
    max-width: 10rem;
    min-height: 100vh;
}

/*When we "check" the hamburger, the sidebar menu appears*/
.hamburger-menu:has(input:checked)+.sidebar {
    translate: 0;
}

a .bx.bx-home{
    position: absolute;
    bottom: 50%;
    color: white;
    border: 1px solid white;
    border-radius: 5px;
    transition: .8s;
}

a:hover .bx.bx-home{
    background: white;
    color: teal;
}

.btn {
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: fixed;
    top: 50%;
    left: 50%;
    border: 1px solid teal;
    padding: 10px;
    border-radius: 5px;
    font-weight: bold;
    color: black;
    box-shadow: 5px 5px teal;
    transition: 0.5s;
}

.btn:hover {
    cursor: pointer;
    color: teal;
    background: rgba(89, 196, 196, 0.325);
    box-shadow: 10px 10px teal;
}
